// Generated by Haxe 4.3.7
#ifndef INCLUDED_src_types_Value
#define INCLUDED_src_types_Value

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(src,types,Function)
HX_DECLARE_CLASS2(src,types,NativeFunction)
HX_DECLARE_CLASS2(src,types,Value)
namespace src{
namespace types{


class Value_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef Value_obj OBJ_;

	public:
		Value_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("src.types.Value",12,39,03,62); }
		::String __ToString() const { return HX_("Value.",bd,77,4b,84) + _hx_tag; }

		static ::src::types::Value VArray(::Array< ::Dynamic> items);
		static ::Dynamic VArray_dyn();
		static ::src::types::Value VBool(bool value);
		static ::Dynamic VBool_dyn();
		static ::src::types::Value VFunc( ::src::types::Function fn);
		static ::Dynamic VFunc_dyn();
		static ::src::types::Value VMap( ::haxe::ds::StringMap map);
		static ::Dynamic VMap_dyn();
		static ::src::types::Value VNative( ::src::types::NativeFunction native);
		static ::Dynamic VNative_dyn();
		static ::src::types::Value VNull;
		static inline ::src::types::Value VNull_dyn() { return VNull; }
		static ::src::types::Value VNumber(Float value);
		static ::Dynamic VNumber_dyn();
		static ::src::types::Value VString(::String value);
		static ::Dynamic VString_dyn();
};

} // end namespace src
} // end namespace types

#endif /* INCLUDED_src_types_Value */ 
