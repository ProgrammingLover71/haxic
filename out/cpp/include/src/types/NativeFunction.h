// Generated by Haxe 4.3.7
#ifndef INCLUDED_src_types_NativeFunction
#define INCLUDED_src_types_NativeFunction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(src,ASTWalker)
HX_DECLARE_CLASS1(src,Environment)
HX_DECLARE_CLASS1(src,Interpreter)
HX_DECLARE_CLASS2(src,ast,Parameter)
HX_DECLARE_CLASS2(src,types,NativeFunction)

namespace src{
namespace types{


class HXCPP_CLASS_ATTRIBUTES NativeFunction_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef NativeFunction_obj OBJ_;
		NativeFunction_obj();

	public:
		enum { _hx_ClassId = 0x77f996c4 };

		void __construct(::String name,::Array< ::Dynamic> params, ::Dynamic body);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.types.NativeFunction")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"src.types.NativeFunction"); }
		static ::hx::ObjectPtr< NativeFunction_obj > __new(::String name,::Array< ::Dynamic> params, ::Dynamic body);
		static ::hx::ObjectPtr< NativeFunction_obj > __alloc(::hx::Ctx *_hx_ctx,::String name,::Array< ::Dynamic> params, ::Dynamic body);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~NativeFunction_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NativeFunction",ef,b3,4c,2e); }

		::String name;
		::Array< ::Dynamic> params;
		 ::Dynamic body;
		Dynamic body_dyn() { return body;}
		virtual ::String toString();
		::Dynamic toString_dyn();

		 ::Dynamic call(::cpp::VirtualArray args, ::src::Interpreter interp);
		::Dynamic call_dyn();

};

} // end namespace src
} // end namespace types

#endif /* INCLUDED_src_types_NativeFunction */ 
