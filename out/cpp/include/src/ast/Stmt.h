// Generated by Haxe 4.3.7
#ifndef INCLUDED_src_ast_Stmt
#define INCLUDED_src_ast_Stmt

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_src_ast_Node
#include <src/ast/Node.h>
#endif
HX_DECLARE_CLASS2(src,ast,Node)
HX_DECLARE_CLASS2(src,ast,Stmt)

namespace src{
namespace ast{


class HXCPP_CLASS_ATTRIBUTES Stmt_obj : public  ::src::ast::Node_obj
{
	public:
		typedef  ::src::ast::Node_obj super;
		typedef Stmt_obj OBJ_;
		Stmt_obj();

	public:
		enum { _hx_ClassId = 0x010a45ea };

		void __construct(int line,int column);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="src.ast.Stmt")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"src.ast.Stmt"); }

		//~Stmt_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Stmt",68,1a,35,37); }

		virtual ::String toString();

};

} // end namespace src
} // end namespace ast

#endif /* INCLUDED_src_ast_Stmt */ 
