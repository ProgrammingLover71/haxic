// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_src_types_Function
#include <src/types/Function.h>
#endif
#ifndef INCLUDED_src_types_NativeFunction
#include <src/types/NativeFunction.h>
#endif
#ifndef INCLUDED_src_types_Value
#include <src/types/Value.h>
#endif
namespace src{
namespace types{

::src::types::Value Value_obj::VArray(::Array< ::Dynamic> items)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VArray",63,e5,6d,1b),4,1)->_hx_init(0,items);
}

::src::types::Value Value_obj::VBool(bool value)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VBool",a0,93,6a,b0),1,1)->_hx_init(0,value);
}

::src::types::Value Value_obj::VFunc( ::src::types::Function fn)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VFunc",ba,fa,13,b3),6,1)->_hx_init(0,fn);
}

::src::types::Value Value_obj::VMap( ::haxe::ds::StringMap map)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VMap",e6,1b,13,39),5,1)->_hx_init(0,map);
}

::src::types::Value Value_obj::VNative( ::src::types::NativeFunction native)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VNative",8d,22,e7,4e),7,1)->_hx_init(0,native);
}

::src::types::Value Value_obj::VNull;

::src::types::Value Value_obj::VNumber(Float value)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VNumber",bf,df,44,ce),0,1)->_hx_init(0,value);
}

::src::types::Value Value_obj::VString(::String value)
{
	return ::hx::CreateEnum< Value_obj >(HX_("VString",c7,81,fa,3d),3,1)->_hx_init(0,value);
}

bool Value_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("VArray",63,e5,6d,1b)) { outValue = Value_obj::VArray_dyn(); return true; }
	if (inName==HX_("VBool",a0,93,6a,b0)) { outValue = Value_obj::VBool_dyn(); return true; }
	if (inName==HX_("VFunc",ba,fa,13,b3)) { outValue = Value_obj::VFunc_dyn(); return true; }
	if (inName==HX_("VMap",e6,1b,13,39)) { outValue = Value_obj::VMap_dyn(); return true; }
	if (inName==HX_("VNative",8d,22,e7,4e)) { outValue = Value_obj::VNative_dyn(); return true; }
	if (inName==HX_("VNull",fd,ad,5d,b8)) { outValue = Value_obj::VNull; return true; }
	if (inName==HX_("VNumber",bf,df,44,ce)) { outValue = Value_obj::VNumber_dyn(); return true; }
	if (inName==HX_("VString",c7,81,fa,3d)) { outValue = Value_obj::VString_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Value_obj)

int Value_obj::__FindIndex(::String inName)
{
	if (inName==HX_("VArray",63,e5,6d,1b)) return 4;
	if (inName==HX_("VBool",a0,93,6a,b0)) return 1;
	if (inName==HX_("VFunc",ba,fa,13,b3)) return 6;
	if (inName==HX_("VMap",e6,1b,13,39)) return 5;
	if (inName==HX_("VNative",8d,22,e7,4e)) return 7;
	if (inName==HX_("VNull",fd,ad,5d,b8)) return 2;
	if (inName==HX_("VNumber",bf,df,44,ce)) return 0;
	if (inName==HX_("VString",c7,81,fa,3d)) return 3;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VArray,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VBool,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VFunc,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VMap,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VNative,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VNumber,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Value_obj,VString,return)

int Value_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("VArray",63,e5,6d,1b)) return 1;
	if (inName==HX_("VBool",a0,93,6a,b0)) return 1;
	if (inName==HX_("VFunc",ba,fa,13,b3)) return 1;
	if (inName==HX_("VMap",e6,1b,13,39)) return 1;
	if (inName==HX_("VNative",8d,22,e7,4e)) return 1;
	if (inName==HX_("VNull",fd,ad,5d,b8)) return 0;
	if (inName==HX_("VNumber",bf,df,44,ce)) return 1;
	if (inName==HX_("VString",c7,81,fa,3d)) return 1;
	return super::__FindArgCount(inName);
}

::hx::Val Value_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("VArray",63,e5,6d,1b)) return VArray_dyn();
	if (inName==HX_("VBool",a0,93,6a,b0)) return VBool_dyn();
	if (inName==HX_("VFunc",ba,fa,13,b3)) return VFunc_dyn();
	if (inName==HX_("VMap",e6,1b,13,39)) return VMap_dyn();
	if (inName==HX_("VNative",8d,22,e7,4e)) return VNative_dyn();
	if (inName==HX_("VNull",fd,ad,5d,b8)) return VNull;
	if (inName==HX_("VNumber",bf,df,44,ce)) return VNumber_dyn();
	if (inName==HX_("VString",c7,81,fa,3d)) return VString_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String Value_obj_sStaticFields[] = {
	HX_("VNumber",bf,df,44,ce),
	HX_("VBool",a0,93,6a,b0),
	HX_("VNull",fd,ad,5d,b8),
	HX_("VString",c7,81,fa,3d),
	HX_("VArray",63,e5,6d,1b),
	HX_("VMap",e6,1b,13,39),
	HX_("VFunc",ba,fa,13,b3),
	HX_("VNative",8d,22,e7,4e),
	::String(null())
};

::hx::Class Value_obj::__mClass;

Dynamic __Create_Value_obj() { return new Value_obj; }

void Value_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("src.types.Value",12,39,03,62), ::hx::TCanCast< Value_obj >,Value_obj_sStaticFields,0,
	&__Create_Value_obj, &__Create,
	&super::__SGetClass(), &CreateValue_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Value_obj::__GetStatic;
}

void Value_obj::__boot()
{
VNull = ::hx::CreateConstEnum< Value_obj >(HX_("VNull",fd,ad,5d,b8),2);
}


} // end namespace src
} // end namespace types
