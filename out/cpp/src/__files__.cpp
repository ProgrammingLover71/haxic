// Generated by Haxe 4.3.7
#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"?",
"C:\\HaxeToolkit\\haxe\\std/StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/EReg.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Sys.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Type.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/Exception.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/NativeStackTrace.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/File.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/CallStack.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/SysTools.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/ValueException.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/exceptions/NotImplementedException.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/exceptions/PosException.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Eof.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Input.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Output.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/iterators/ArrayIterator.hx",
"src/Interpreter.hx",
"src/Lexer.hx",
"src/Main.hx",
"src/Parser.hx",
"src/Token.hx",
"src/Utils.hx",
"src/ast/ArrayExpr.hx",
"src/ast/BinaryExpr.hx",
"src/ast/BlockStmt.hx",
"src/ast/BooleanExpr.hx",
"src/ast/CallExpr.hx",
"src/ast/Expr.hx",
"src/ast/ExprStmt.hx",
"src/ast/ForeachStmt.hx",
"src/ast/FunctionExpr.hx",
"src/ast/FunctionStmt.hx",
"src/ast/IfStmt.hx",
"src/ast/IndexExpr.hx",
"src/ast/InputStmt.hx",
"src/ast/LetStmt.hx",
"src/ast/MapExpr.hx",
"src/ast/Node.hx",
"src/ast/NullExpr.hx",
"src/ast/NumberExpr.hx",
"src/ast/Parameter.hx",
"src/ast/PrintStmt.hx",
"src/ast/ReturnStmt.hx",
"src/ast/Stmt.hx",
"src/ast/StringExpr.hx",
"src/ast/UnaryExpr.hx",
"src/ast/VariableExpr.hx",
"src/ast/WhileStmt.hx",
"src/compiler/PyCompiler.hx",
"src/types/Function.hx",
"src/types/NativeFunction.hx",
"src/types/V.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"c:\\Users\\Sasha\\Desktop\\haxic\\?",
"C:\\HaxeToolkit\\haxe\\std\\StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\EReg.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Reflect.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Sys.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Type.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\Exception.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\NativeStackTrace.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\File.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\CallStack.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\SysTools.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\ValueException.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\exceptions\\NotImplementedException.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\exceptions\\PosException.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Eof.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Input.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\iterators\\ArrayIterator.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Interpreter.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Lexer.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Main.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Parser.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Token.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\Utils.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\ArrayExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\BinaryExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\BlockStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\BooleanExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\CallExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\Expr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\ExprStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\ForeachStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\FunctionExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\FunctionStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\IfStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\IndexExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\InputStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\LetStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\MapExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\Node.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\NullExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\NumberExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\Parameter.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\PrintStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\ReturnStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\Stmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\StringExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\UnaryExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\VariableExpr.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\ast\\WhileStmt.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\compiler\\PyCompiler.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\types\\Function.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\types\\NativeFunction.hx",
"c:\\Users\\Sasha\\Desktop\\haxic\\src\\types\\V.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"EReg",
"Reflect",
"Std",
"StringBuf",
"haxe.SysTools",
"StringTools",
"Sys",
"Type",
"haxe._CallStack.CallStack_Impl_",
"haxe.Exception",
"haxe.NativeStackTrace",
"haxe.ValueException",
"haxe.ds.StringMap",
"haxe.exceptions.PosException",
"haxe.exceptions.NotImplementedException",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Eof",
"haxe.io.Input",
"haxe.io.Output",
"haxe.iterators.ArrayIterator",
"src.Environment",
"src.Return",
"src.Interpreter",
"src.Lexer",
"src.Main",
"src.Parser",
"src.Token",
"src.Utils",
"src.ast.Node",
"src.ast.Expr",
"src.ast.ArrayExpr",
"src.ast.BinaryExpr",
"src.ast.Stmt",
"src.ast.BlockStmt",
"src.ast.BooleanExpr",
"src.ast.CallExpr",
"src.ast.ExprStmt",
"src.ast.ForeachStmt",
"src.ast.FunctionExpr",
"src.ast.FunctionStmt",
"src.ast.IfStmt",
"src.ast.IndexExpr",
"src.ast.InputStmt",
"src.ast.LetStmt",
"src.ast.MapExpr",
"src.ast.NullExpr",
"src.ast.NumberExpr",
"src.ast.Parameter",
"src.ast.PrintStmt",
"src.ast.ReturnStmt",
"src.ast.StringExpr",
"src.ast.UnaryExpr",
"src.ast.VariableExpr",
"src.ast.WhileStmt",
"src.compiler.PyCompiler",
"src.types.Function",
"src.types.NativeFunction",
"src.types.V",
"sys.io.File",
"sys.io.FileInput",
"sys.io.FileOutput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(::hx::__hxcpp_all_classes, ::hx::__hxcpp_all_files_fullpath); }
