// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_src_ast_Node
#include <src/ast/Node.h>
#endif
#ifndef INCLUDED_src_ast_Stmt
#include <src/ast/Stmt.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b157d5d9938c04d9_5_new,"src.ast.Stmt","new",0x5c115dd0,"src.ast.Stmt.new","src/ast/Stmt.hx",5,0xe1872b5e)
HX_LOCAL_STACK_FRAME(_hx_pos_b157d5d9938c04d9_9_toString,"src.ast.Stmt","toString",0x496a8d3c,"src.ast.Stmt.toString","src/ast/Stmt.hx",9,0xe1872b5e)
namespace src{
namespace ast{

void Stmt_obj::__construct(int line,int column){
            	HX_STACKFRAME(&_hx_pos_b157d5d9938c04d9_5_new)
HXDLIN(   5)		super::__construct(line,column);
            	}

bool Stmt_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x010a45ea) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x010a45ea;
	} else {
		return inClassId==(int)0x24f66a08;
	}
}

::String Stmt_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_b157d5d9938c04d9_9_toString)
HXDLIN(   9)		return HX_("Stmt",68,1a,35,37);
            	}



Stmt_obj::Stmt_obj()
{
}

::hx::Val Stmt_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Stmt_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Stmt_obj_sStaticStorageInfo = 0;
#endif

static ::String Stmt_obj_sMemberFields[] = {
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class Stmt_obj::__mClass;

void Stmt_obj::__register()
{
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("src.ast.Stmt",de,75,82,9f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Stmt_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Stmt_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Stmt_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Stmt_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace ast
