// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_src_TokenType
#include <src/TokenType.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_sys_io_FileOutput
#include <sys/io/FileOutput.h>
#endif
#ifndef INCLUDED_sys_io_FileInput
#include <sys/io/FileInput.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_src_ast_WhileStmt
#include <src/ast/WhileStmt.h>
#endif
#ifndef INCLUDED_src_ast_VariableExpr
#include <src/ast/VariableExpr.h>
#endif
#ifndef INCLUDED_src_ast_UnaryExpr
#include <src/ast/UnaryExpr.h>
#endif
#ifndef INCLUDED_src_ast_StringExpr
#include <src/ast/StringExpr.h>
#endif
#ifndef INCLUDED_src_ast_PrintStmt
#include <src/ast/PrintStmt.h>
#endif
#ifndef INCLUDED_src_ast_NumberExpr
#include <src/ast/NumberExpr.h>
#endif
#ifndef INCLUDED_src_ast_LetStmt
#include <src/ast/LetStmt.h>
#endif
#ifndef INCLUDED_src_ast_InputStmt
#include <src/ast/InputStmt.h>
#endif
#ifndef INCLUDED_src_ast_IfStmt
#include <src/ast/IfStmt.h>
#endif
#ifndef INCLUDED_src_ast_ExprStmt
#include <src/ast/ExprStmt.h>
#endif
#ifndef INCLUDED_src_ast_BooleanExpr
#include <src/ast/BooleanExpr.h>
#endif
#ifndef INCLUDED_src_ast_BlockStmt
#include <src/ast/BlockStmt.h>
#endif
#ifndef INCLUDED_src_ast_Stmt
#include <src/ast/Stmt.h>
#endif
#ifndef INCLUDED_src_ast_BinaryExpr
#include <src/ast/BinaryExpr.h>
#endif
#ifndef INCLUDED_src_ast_Expr
#include <src/ast/Expr.h>
#endif
#ifndef INCLUDED_src_ast_Node
#include <src/ast/Node.h>
#endif
#ifndef INCLUDED_src_Utils
#include <src/Utils.h>
#endif
#ifndef INCLUDED_src_Token
#include <src/Token.h>
#endif
#ifndef INCLUDED_src_Parser
#include <src/Parser.h>
#endif
#ifndef INCLUDED_src_Main
#include <src/Main.h>
#endif
#ifndef INCLUDED_src_Lexer
#include <src/Lexer.h>
#endif
#ifndef INCLUDED_src_InterpBknd
#include <src/InterpBknd.h>
#endif
#ifndef INCLUDED_src_ASTWalker
#include <src/ASTWalker.h>
#endif
#ifndef INCLUDED_haxe_iterators_ArrayIterator
#include <haxe/iterators/ArrayIterator.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_haxe_io_Input
#include <haxe/io/Input.h>
#endif
#ifndef INCLUDED_haxe_io_Eof
#include <haxe/io/Eof.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_exceptions_NotImplementedException
#include <haxe/exceptions/NotImplementedException.h>
#endif
#ifndef INCLUDED_haxe_exceptions_PosException
#include <haxe/exceptions/PosException.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ValueException
#include <haxe/ValueException.h>
#endif
#ifndef INCLUDED_haxe_NativeStackTrace
#include <haxe/NativeStackTrace.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif

void __files__boot();

void __boot_all()
{
__files__boot();
::hx::RegisterResources( ::hx::GetResources() );
::src::TokenType_obj::__register();
::haxe::io::Error_obj::__register();
::haxe::io::Encoding_obj::__register();
::sys::io::FileOutput_obj::__register();
::sys::io::FileInput_obj::__register();
::sys::io::File_obj::__register();
::src::ast::WhileStmt_obj::__register();
::src::ast::VariableExpr_obj::__register();
::src::ast::UnaryExpr_obj::__register();
::src::ast::StringExpr_obj::__register();
::src::ast::PrintStmt_obj::__register();
::src::ast::NumberExpr_obj::__register();
::src::ast::LetStmt_obj::__register();
::src::ast::InputStmt_obj::__register();
::src::ast::IfStmt_obj::__register();
::src::ast::ExprStmt_obj::__register();
::src::ast::BooleanExpr_obj::__register();
::src::ast::BlockStmt_obj::__register();
::src::ast::Stmt_obj::__register();
::src::ast::BinaryExpr_obj::__register();
::src::ast::Expr_obj::__register();
::src::ast::Node_obj::__register();
::src::Utils_obj::__register();
::src::Token_obj::__register();
::src::Parser_obj::__register();
::src::Main_obj::__register();
::src::Lexer_obj::__register();
::src::InterpBknd_obj::__register();
::src::ASTWalker_obj::__register();
::haxe::iterators::ArrayIterator_obj::__register();
::haxe::io::Output_obj::__register();
::haxe::io::Input_obj::__register();
::haxe::io::Eof_obj::__register();
::haxe::io::BytesBuffer_obj::__register();
::haxe::io::Bytes_obj::__register();
::haxe::exceptions::NotImplementedException_obj::__register();
::haxe::exceptions::PosException_obj::__register();
::haxe::ds::StringMap_obj::__register();
::haxe::ValueException_obj::__register();
::haxe::NativeStackTrace_obj::__register();
::haxe::Exception_obj::__register();
::haxe::IMap_obj::__register();
::Type_obj::__register();
::Sys_obj::__register();
::Std_obj::__register();
::Reflect_obj::__register();
::EReg_obj::__register();
::src::TokenType_obj::__boot();
::haxe::io::Error_obj::__boot();
::haxe::io::Encoding_obj::__boot();
}

