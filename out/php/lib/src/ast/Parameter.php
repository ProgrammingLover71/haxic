<?php
/**
 * Generated by Haxe 4.3.7
 */

namespace src\ast;

use \php\Boot;

class Parameter {
	/**
	 * @var int
	 */
	public $column;
	/**
	 * @var Expr
	 */
	public $defaultValue;
	/**
	 * @var int
	 */
	public $line;
	/**
	 * @var string
	 */
	public $name;

	/**
	 * @param string $name
	 * @param Expr $defaultValue
	 * @param int $line
	 * @param int $column
	 * 
	 * @return void
	 */
	public function __construct ($name, $defaultValue, $line, $column) {
		#src/ast/Parameter.hx:10: characters 9-25
		$this->name = $name;
		#src/ast/Parameter.hx:11: characters 9-41
		$this->defaultValue = $defaultValue;
		#src/ast/Parameter.hx:12: characters 9-25
		$this->line = $line;
		#src/ast/Parameter.hx:13: characters 9-29
		$this->column = $column;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/ast/Parameter.hx:17: characters 9-119
		return "Parameter(" . ($this->name??'null') . ((($this->defaultValue !== null ? ", default=" . \Std::string($this->defaultValue) : ""))??'null') . ")";
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(Parameter::class, 'src.ast.Parameter');
