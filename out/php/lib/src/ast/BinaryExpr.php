<?php
/**
 * Generated by Haxe 4.3.7
 */

namespace src\ast;

use \php\Boot;
use \src\Token;

class BinaryExpr extends Expr {
	/**
	 * @var Expr
	 */
	public $left;
	/**
	 * @var Token
	 */
	public $oper;
	/**
	 * @var Expr
	 */
	public $right;

	/**
	 * @param Expr $left
	 * @param Token $oper
	 * @param Expr $right
	 * @param int $line
	 * @param int $column
	 * 
	 * @return void
	 */
	public function __construct ($left, $oper, $right, $line, $column) {
		#src/ast/BinaryExpr.hx:9: characters 9-28
		parent::__construct($line, $column);
		#src/ast/BinaryExpr.hx:10: characters 9-25
		$this->left = $left;
		#src/ast/BinaryExpr.hx:11: characters 9-25
		$this->oper = $oper;
		#src/ast/BinaryExpr.hx:12: characters 9-27
		$this->right = $right;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/ast/BinaryExpr.hx:16: characters 9-87
		return "(" . ($this->left->toString()??'null') . " " . ((($this->oper->value === null ? "null" : \Std::string($this->oper->value)))??'null') . " " . ($this->right->toString()??'null') . ")";
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(BinaryExpr::class, 'src.ast.BinaryExpr');
