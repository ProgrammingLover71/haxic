<?php
/**
 * Generated by Haxe 4.3.7
 */

namespace src\ast;

use \php\Boot;

class WhileStmt extends Stmt {
	/**
	 * @var BlockStmt
	 */
	public $body;
	/**
	 * @var Expr
	 */
	public $condition;

	/**
	 * @param Expr $condition
	 * @param BlockStmt $body
	 * @param int $line
	 * @param int $column
	 * 
	 * @return void
	 */
	public function __construct ($condition, $body, $line, $column) {
		#src/ast/WhileStmt.hx:8: characters 9-28
		parent::__construct($line, $column);
		#src/ast/WhileStmt.hx:9: characters 9-35
		$this->condition = $condition;
		#src/ast/WhileStmt.hx:10: characters 9-25
		$this->body = $body;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/ast/WhileStmt.hx:14: characters 9-93
		return "While(condition=" . ($this->condition->toString()??'null') . ", body=" . ($this->body->toString()??'null') . ")";
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(WhileStmt::class, 'src.ast.WhileStmt');
