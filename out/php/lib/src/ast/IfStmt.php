<?php
/**
 * Generated by Haxe 4.3.7
 */

namespace src\ast;

use \php\Boot;

class IfStmt extends Stmt {
	/**
	 * @var Expr
	 */
	public $condition;
	/**
	 * @var BlockStmt
	 */
	public $elseBranch;
	/**
	 * @var BlockStmt
	 */
	public $thenBranch;

	/**
	 * @param Expr $condition
	 * @param BlockStmt $thenBranch
	 * @param BlockStmt $elseBranch
	 * @param int $line
	 * @param int $column
	 * 
	 * @return void
	 */
	public function __construct ($condition, $thenBranch, $elseBranch, $line, $column) {
		#src/ast/IfStmt.hx:9: characters 9-28
		parent::__construct($line, $column);
		#src/ast/IfStmt.hx:10: characters 9-35
		$this->condition = $condition;
		#src/ast/IfStmt.hx:11: characters 9-37
		$this->thenBranch = $thenBranch;
		#src/ast/IfStmt.hx:12: characters 9-37
		$this->elseBranch = $elseBranch;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/ast/IfStmt.hx:16: characters 9-155
		return "If(cond=" . ($this->condition->toString()??'null') . ", then=" . ($this->thenBranch->toString()??'null') . ((($this->elseBranch !== null ? ", else=" . ($this->elseBranch->toString()??'null') : ""))??'null') . ")";
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(IfStmt::class, 'src.ast.IfStmt');
