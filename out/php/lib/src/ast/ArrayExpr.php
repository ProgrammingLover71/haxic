<?php
/**
 * Generated by Haxe 4.3.7
 */

namespace src\ast;

use \php\Boot;

class ArrayExpr extends Expr {
	/**
	 * @var Expr[]|\Array_hx
	 */
	public $elements;

	/**
	 * @param Expr[]|\Array_hx $elements
	 * @param int $line
	 * @param int $column
	 * 
	 * @return void
	 */
	public function __construct ($elements, $line, $column) {
		#src/ast/ArrayExpr.hx:7: characters 9-28
		parent::__construct($line, $column);
		#src/ast/ArrayExpr.hx:8: characters 9-33
		$this->elements = $elements;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#src/ast/ArrayExpr.hx:12: characters 27-58
		$result = [];
		$data = $this->elements->arr;
		$_g_current = 0;
		$_g_length = \count($data);
		$_g_data = $data;
		while ($_g_current < $_g_length) {
			$item = $_g_data[$_g_current++];
			$result[] = $item->toString();
		}
		#src/ast/ArrayExpr.hx:12: characters 9-75
		return "Array(" . (\Array_hx::wrap($result)->join(", ")??'null') . ")";
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(ArrayExpr::class, 'src.ast.ArrayExpr');
